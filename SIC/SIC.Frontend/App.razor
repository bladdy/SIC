@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!routeData.PageType.Name.Contains("Login"))
                    {
                        @* Si no está autorizado y no está en Login, redirige al login *@
                        <RedirectToLogin />
                    }
                    else
                    {
                        <LayoutView Layout="@typeof(LoginLayout)">
                            <p>Por favor inicia sesión.</p>
                        </LayoutView>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>

        <NotFound>
            <LayoutView Layout="@typeof(LoginLayout)">
                <p role="alert">Página no encontrada.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>


<!--<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <PageTitle>No encontrado</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Lo sentimos, no hay nada que hacer en esta ruta.</p>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>-->


