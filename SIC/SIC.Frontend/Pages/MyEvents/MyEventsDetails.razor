@page "/my-events/details/{Code}"
@using SIC.Frontend.Shared
<PageTitle>Detalles del Evento</PageTitle>
<!--
<h3 class="mb-2">Detalle del Evento</h3>-->
@if (EventDetail is null)
{
    <div class="alert alert-info">Cargando evento...</div>
}
else
{
    <div class="card shadow-lg border-0 rounded-3 mb-3">
        <!-- Header: título, subtítulo, tipo y estado -->
        <div class="card-header text-white" style="background-color:#3C6A79;">
            <div class="d-flex justify-content-between align-items-start flex-wrap">
                <div>
                    <h4 class="mb-0">@EventDetail.Name</h4>
                    <small>@EventDetail.SubTitle</small>
                </div>
                <div class="text-end">
                    <p class="mb-1"><strong>Tipo:</strong> @EventDetail.EventType?.Name</p>
                    <p class="mb-0">
                        <strong>Estado:</strong>
                        <span class="badge bg-@(EventDetail.Status == Status.Active ? "success" : "secondary")">
                            @EventDetail.Status.GetDescription()
                        </span>
                    </p>
                </div>
            </div>
        </div>

        <!-- Body: Información detallada -->
        <div class="card-body">
            <div class="row">
                <!-- Columna 1: Fecha, Hora, Ubicación -->
                <div class="col-md-4 ">
                    <p><strong>Fecha:</strong> @EventDetail.Date.ToString("dd/MM/yyyy")</p>
                    <p><strong>Hora:</strong> @DateTime.Today.Add(EventDetail.Time).ToString("hh:mm tt")</p>
                    <p><strong>Ubicación:</strong> <a class="btn btn-sm btn-custom" href="@EventDetail.Ubication" target="_blank">Ubicación del evento</a></p>
                </div>

                <!-- Columna 2: Host y Planner -->
                <div class="col-md-4">
                    <p><strong>Host:</strong> @EventDetail.Host (@EventDetail.HostPhone)</p>
                    <p>
                        <strong>Planner:</strong>
                        @if (!string.IsNullOrEmpty(EventDetail.Planner))
                        {
                            @($"{EventDetail.Planner} ({EventDetail.PlannerPhone})")
                        }
                        else
                        {
                            <em>No asignado</em>
                        }
                    </p>
                    <p><strong>Url Invitación:</strong> <a href="@EventDetail.Url" class="btn btn-sm btn-custom" target="_blank">Ver invitación</a></p>
                </div>

                <!-- Columna 3: Invitados y Adultos/Niños -->
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-6">

                            <p class="d-flex justify-content-between px-3 py-1 text-white" style="background-color:#3C6A79;">
                                <strong>Invitados:</strong>
                                <span>@(EventDetail.NumberAdults + EventDetail.NumberChildren)</span>
                            </p>

                            <p class="d-flex justify-content-between px-3 py-1 text-white" style="background-color:#3C6A79;">
                                <strong>Adultos:</strong>
                                <span>@EventDetail.NumberAdults</span>
                            </p>
                            <p class="d-flex justify-content-between px-3 py-1 text-white" style="background-color:#3C6A79;">
                                <strong>Niños:</strong>
                                <span>@EventDetail.NumberChildren</span>
                            </p>
                        </div>
                        <div class="col-6">
                            <p class="d-flex justify-content-between px-3 py-1 text-white bg-secondary">
                                <strong>Pendientes:</strong>
                                <span>@(EventDetail.NumberAdultsPending + EventDetail.NumberChildrenPending)</span>
                            </p>
                            <p class="d-flex justify-content-between px-3 py-1 text-white bg-success">
                                <strong>Sí asistiré:</strong>
                                <span>@(EventDetail.NumberAdultsConfirmed + EventDetail.NumberChildrenConfirmed)</span>
                            </p>
                            <p class="d-flex justify-content-between px-3 py-1 text-white bg-danger">
                                <strong>No asistiré:</strong>
                                <span>@(EventDetail.NumberAdultsNotAttend + EventDetail.NumberChildrenNotAttend)</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer: Botones de acción -->
        <div class="card-footer d-flex justify-content-end flex-wrap gap-2">
            <button class="btn btn-sm btn-custom" @onclick="ShowCreateModal">Agregar Invitado</button>
            <button class="btn btn-sm btn-custom" @onclick="NavegateToMessage">Mensajes</button>

            <button class="btn btn-sm btn-custom" @onclick="DescargarExcel" disabled="@isLoading">
                @if (isLoading)
                {
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span> Generando... </span>
                }
                else
                {
                    <span>Exportar Excel</span>
                }
            </button>

            <div class="d-flex gap-2 align-items-center">
                <InputFile class="form-control form-control-sm" style="width: 200px;" OnChange="HandleFileSelected" />
                <button class="btn btn-sm btn-custom" @onclick="SubirExcel" disabled="@(!hasFileSelected || isLoadingImport)">
                    @if (isLoadingImport)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span> Cargando... </span>
                    }
                    else
                    {
                        <span>Cargar Lista de Invitados</span>
                    }
                </button>
            </div>

            <a href="/my-events/register-intations-by-event/@EventDetail.Code" class="btn btn-sm btn-custom">Scan QR</a>
        </div>
    </div>

    <h4 class="mb-0">Lista de Invitados</h4>
    ﻿﻿
    <!--<Filter PlaceHolder="Buscar Invitacion..." Callback=@FilterCallBack /> 25d366-->
    ﻿﻿<div class="mb-2" style="display: flex; flex-wrap:wrap; align-items: center;">
        <input style="width:400px;" type="text" class="form-control" placeholder="Buscar Invitacion..." @bind-value="Filter">
        <button type="button" class="btn btn-custom  mx-1" @onclick="ApplyFilterAsync"><i class="bi bi-funnel" /> Filtrar</button>
        <button type="button" class="btn btn-custom " @onclick="CleanFilterAsync"><i class="bi bi-x-circle" /> Limpiar</button>
        <div class="form-check form-switch mx-1">
            <input class="form-check-input btn-custom" type="checkbox" id="chkUsarWhatsApp" @bind="usarWhatsApp" />
            <label class="form-check-label fw-bold" for="chkUsarWhatsApp">
                @(usarWhatsApp ? "Modo: Enviar por WhatsApp" : "Modo: Copiar al Portapapeles")
            </label>
        </div>
    </div>


    <!--Quitar: Email-->
    <table class="table table-striped table-hover table-bordered align-middle">
        <thead class="" style="background-color:#3C6A79; color: white;">
            <tr>
                <th>Codigo</th>
                <th>Nombre</th>
                <th>Móvil</th>
                <th>Adultos</th>
                <th>Niños</th>
                <th>Conf. Adultos</th>
                <th>Conf. Niños</th>
                <th>Mesa</th>
                <th>Estado</th>
                <th>Invitar</th>
                <th>Avisar</th>
                <th>Editar</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var invitation in Invitations!)
            {
                <tr>
                    <td>
                        <a style=" color:#3C6A79;cursor: pointer;" @onclick="() => ShowEditModal(invitation)">
                            @invitation.Code
                        </a>
                    </td>
                    <td>@invitation.Name</td>
                    <td>@invitation.PhoneNumber</td>
                    <td>@invitation.NumberAdults</td>
                    <td>@invitation.NumberChildren</td>
                    <td>@invitation.NumberConfirmedAdults</td>
                    <td>@invitation.NumberConfirmedChildren</td>
                    <td>@invitation.Table</td>
                    <td>
                        <!--Nuevos estados: Asistire verde, No Asistire Rojo, Pendiente negro con blanco-->
                        <span class="badge bg-@(invitation.Status == Status.Attend ? "success" : invitation.Status == Status.NotAttend ? "danger" : "secondary")">
                            @invitation.Status.GetDescription()
                        </span>
                    </td>
                    <td>
                        @if (usarWhatsApp)
                        {
                            <button class="btn d-flex align-items-center gap-2" style="background-color: #25d366; color:white;"
                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Invitar por WhatsApp"
                                    @onclick="() => AbrirWhatsapp(invitation.PhoneNumber, invitation.Code!, invitation.Id, 1)"
                                    disabled="@(loadingWhatsappId1 == invitation.Id)">
                                @if (loadingWhatsappId1 == invitation.Id)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Abriendo...</span>
                                }
                                else
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" style="color:black;" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-brand-whatsapp"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" /><path d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" /></svg>
                                }
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-info d-flex align-items-center gap-2"
                                    @onclick="() => CopiarInvitacion(invitation.Code!, invitation.Id, 1)"
                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Copiar invitacion"
                                    disabled="@(copyingId1 == invitation.Id)">
                                @if (copyingId1 == invitation.Id)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Copiando...</span>
                                }
                                else
                                {
                                    <svg id='Copy_24' style="color:white;" width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
                                        <rect width='24' height='24' stroke='none' fill='#000000' opacity='0' />
                                        <g transform="matrix(0.77 0 0 0.77 12 12)">
                                            <path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" translate(-13, -13)" d="M 4 0 C 1.796875 0 0 1.796875 0 4 L 0 17 C 0 19.203125 1.796875 21 4 21 L 9 21 L 9 19 L 4 19 C 2.894531 19 2 18.105469 2 17 L 2 4 C 2 2.894531 2.894531 2 4 2 L 8.28125 2 C 9.003906 2.183594 9 3.050781 9 3.9375 L 9 6 C 9 6.25 9.097656 6.480469 9.25 6.65625 C 9.808594 5.117188 11.269531 4 13 4 L 13.0625 4 C 12.886719 3.824219 12.707031 3.644531 12.53125 3.46875 C 12.285156 3.222656 12.019531 2.992188 11.78125 2.75 C 10.070313 1.003906 9.0625 0 8 0 Z M 14 5 C 11.796875 5 10 6.796875 10 9 L 10 22 C 10 24.203125 11.796875 26 14 26 L 22 26 C 24.203125 26 26 24.203125 26 22 L 26 13 C 26 11.9375 25.027344 10.929688 23.28125 9.21875 C 23.039063 8.980469 22.777344 8.714844 22.53125 8.46875 C 22.285156 8.222656 22.019531 7.992188 21.78125 7.75 C 20.070313 6.003906 19.0625 5 18 5 Z M 14 7 L 18.28125 7 C 19.003906 7.183594 19 8.050781 19 8.9375 L 19 11 C 19 11.550781 19.449219 12 20 12 L 22 12 C 22.996094 12 24 12.003906 24 13 L 24 22 C 24 23.105469 23.105469 24 22 24 L 14 24 C 12.894531 24 12 23.105469 12 22 L 12 9 C 12 7.894531 12.894531 7 14 7 Z M 4 8 L 4 10 L 9 10 L 9 8 Z M 4 11 L 4 13 L 9 13 L 9 11 Z M 14 13 L 14 15 L 22 15 L 22 13 Z M 4 14 L 4 16 L 9 16 L 9 14 Z M 14 16 L 14 18 L 20 18 L 20 16 Z M 14 19 L 14 21 L 22 21 L 22 19 Z" stroke-linecap="round" />
                                        </g>
                                    </svg>
                                }
                            </button>
                        }

                    </td>
                    <td>
                        @if (usarWhatsApp)
                        {
                            <button class="btn d-flex align-items-center gap-2" style="background-color: #25d366; color:white;"
                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Avisar por WhatsApp"
                                    @onclick="() => AbrirWhatsapp(invitation.PhoneNumber, invitation.Code!, invitation.Id,2)"
                                    disabled="@(loadingWhatsappId2 == invitation.Id)">
                                @if (loadingWhatsappId2 == invitation.Id)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Abriendo...</span>
                                }
                                else
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-brand-whatsapp"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" /><path d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" /></svg>
                                }
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-info d-flex align-items-center gap-2"
                                    @onclick="() => CopiarInvitacion(invitation.Code!, invitation.Id,2)"
                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Copiar Aviso"
                                    disabled="@(copyingId2 == invitation.Id)">
                                @if (copyingId2 == invitation.Id)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Copiando...</span>
                                }
                                else
                                {
                                    <svg id='Copy_24' width='24' height='24' viewBox='0 0 24 24' fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <rect width='24' height='24' opacity='0' />
                                        <g transform="matrix(0.77 0 0 0.77 12 12)">
                                            <path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;" transform=" translate(-13, -13)" d="M 4 0 C 1.796875 0 0 1.796875 0 4 L 0 17 C 0 19.203125 1.796875 21 4 21 L 9 21 L 9 19 L 4 19 C 2.894531 19 2 18.105469 2 17 L 2 4 C 2 2.894531 2.894531 2 4 2 L 8.28125 2 C 9.003906 2.183594 9 3.050781 9 3.9375 L 9 6 C 9 6.25 9.097656 6.480469 9.25 6.65625 C 9.808594 5.117188 11.269531 4 13 4 L 13.0625 4 C 12.886719 3.824219 12.707031 3.644531 12.53125 3.46875 C 12.285156 3.222656 12.019531 2.992188 11.78125 2.75 C 10.070313 1.003906 9.0625 0 8 0 Z M 14 5 C 11.796875 5 10 6.796875 10 9 L 10 22 C 10 24.203125 11.796875 26 14 26 L 22 26 C 24.203125 26 26 24.203125 26 22 L 26 13 C 26 11.9375 25.027344 10.929688 23.28125 9.21875 C 23.039063 8.980469 22.777344 8.714844 22.53125 8.46875 C 22.285156 8.222656 22.019531 7.992188 21.78125 7.75 C 20.070313 6.003906 19.0625 5 18 5 Z M 14 7 L 18.28125 7 C 19.003906 7.183594 19 8.050781 19 8.9375 L 19 11 C 19 11.550781 19.449219 12 20 12 L 22 12 C 22.996094 12 24 12.003906 24 13 L 24 22 C 24 23.105469 23.105469 24 22 24 L 14 24 C 12.894531 24 12 23.105469 12 22 L 12 9 C 12 7.894531 12.894531 7 14 7 Z M 4 8 L 4 10 L 9 10 L 9 8 Z M 4 11 L 4 13 L 9 13 L 9 11 Z M 14 13 L 14 15 L 22 15 L 22 13 Z M 4 14 L 4 16 L 9 16 L 9 14 Z M 14 16 L 14 18 L 20 18 L 20 16 Z M 14 19 L 14 21 L 22 21 L 22 19 Z" stroke-linecap="round" />
                                        </g>
                                    </svg>
                                }
                            </button>
                        }
                    </td>
                    <td>
                        <button class="btn btn-custom me-2" @onclick="() => ShowEditModal(invitation)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-pencil"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" /><path d="M13.5 6.5l4 4" /></svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-center my-3">
        <Pagination CurrentPage="currentPage"
                    TotalPages="totalPages"
                    SelectedPage="SelectedPageAsync" />

    </div>
}
<!-- Modal -->
@if (IsModalVisible)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        @((IsEditMode ? $"Editar Invitacion: {@NewInvitation.Code}" : "Crear Invitacion"))
                    </h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@NewInvitation" OnValidSubmit="@SaveInvitation">
                        <DataAnnotationsValidator />
                        <ValidationSummary />


                        <div class="mb-3">
                            <label class="form-label">Nombre</label>
                            <InputText class="form-control" @bind-Value="NewInvitation.Name" />
                            <ValidationMessage For="@(() => NewInvitation.Name)" />
                        </div>
                        <div class="mb-3 row">
                            <div class="col-auto">
                                <label class="form-label">Email</label>
                                <InputText class="form-control" @bind-Value="NewInvitation.Email" />
                                <ValidationMessage For="@(() => NewInvitation.Email)" />
                            </div>
                            <div class="col-auto">
                                <label class="form-label">Telefono</label>
                                <InputText class="form-control" @bind-Value="NewInvitation.PhoneNumber" />
                                <ValidationMessage For="@(() => NewInvitation.PhoneNumber)" />
                            </div>
                        </div>
                        <div class="mb-3 row col-12">
                            <div class="col-3">
                                <label class="form-label">Numero de adultos</label>
                                <InputNumber class="form-control" @bind-Value="NewInvitation.NumberAdults" />
                                <ValidationMessage For="@(() => NewInvitation.NumberAdults)" />
                            </div>
                            <div class="col-3">
                                <label class="form-label">Numero de Niños</label>
                                <InputNumber class="form-control" @bind-Value="NewInvitation.NumberChildren" />
                                <ValidationMessage For="@(() => NewInvitation.NumberChildren)" />
                            </div>
                            <div class="col-3">
                                <label class="form-label">N° adultos Confirmados</label>
                                <InputNumber class="form-control" @bind-Value="NewInvitation.NumberConfirmedAdults" />
                                <ValidationMessage For="@(() => NewInvitation.NumberConfirmedAdults)" />
                            </div>
                            <div class="col-3">
                                <label class="form-label">N° Niños Confirmados</label>
                                <InputNumber class="form-control" @bind-Value="NewInvitation.NumberConfirmedChildren" />
                                <ValidationMessage For="@(() => NewInvitation.NumberConfirmedChildren)" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Estado</label>
                            <InputSelect class="form-select" @bind-Value="NewInvitation.Status">
                                <option value="">-- Selecciona un Estado --</option>
                                @foreach (var status in Enum.GetValues<Status>()
                            .Where(s => s == Status.NotAttend || s == Status.Pending || s == Status.Attend || s == Status.Warned))
                                {
                                    <option value="@status">@status.GetDescription()</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => NewInvitation.Status)" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Mesa</label>
                            <InputText class="form-control" @bind-Value="NewInvitation.Table" />
                            <ValidationMessage For="@(() => NewInvitation.Table)" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Comentarios</label>
                            <InputTextArea class="form-control" @bind-Value="NewInvitation.Comments" />
                            <ValidationMessage For="@(() => NewInvitation.Comments)" />
                        </div>

                        <!--Inhabilitar los botones hasta que termine de enviar-->
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-custom">
                                Guardar
                            </button>
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">
                                Cancelar
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}